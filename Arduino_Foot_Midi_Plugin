#include "MIDIUSB.h" // Biblioteca MIDIUSB

int fx1, fx2, fx3, fx4, fx5 = 0;//-Define botões de FX com valor ZERO por padrão, que no caso usam o pinos 7, 8, 9, 10, 11.

int fxLeds[] = {A0, A1, A2, A3, A4, A5, 12, 13, 1, 0};//---Pinos dos LEDs para a sequência da animaçãoa inicial.

byte channel = 0;//----------------Canal MIDI.

void setup() {
    pinMode(2, INPUT_PULLUP);//----Definindo entrada dos pinos dos Botões de Patchs.
    pinMode(3, INPUT_PULLUP);
    pinMode(4, INPUT_PULLUP);
    pinMode(5, INPUT_PULLUP);
    pinMode(6, INPUT_PULLUP);
    
    pinMode(7, INPUT_PULLUP);//----Definindo entrada dos pinos dos Botões de Efeitos.
    pinMode(8, INPUT_PULLUP);
    pinMode(9, INPUT_PULLUP);
    pinMode(10, INPUT_PULLUP);
    pinMode(11, INPUT_PULLUP);

    pinMode(A0, OUTPUT);//---------Definindo saída dos pinos dos LEDs dos Patches.
    pinMode(A1, OUTPUT);
    pinMode(A2, OUTPUT);
    pinMode(A3, OUTPUT);
    pinMode(A4, OUTPUT);

    pinMode(A5, OUTPUT);//---------Definindo saída dos pinos dos LEDs dos Efeitos
    pinMode(12, OUTPUT);
    pinMode(13, OUTPUT);
    pinMode(1, OUTPUT);
    pinMode(0, OUTPUT);

    //########### BLOCO ANIMAÇÃO DOS LEDS NA INICIALIZAÇÃO ACENDEM E APAGAM 3 VEZES EM SEQUÊNCIA ###########
    
    for (int pino=0; pino<=10; pino ++) {//---Verificando os 10 pinos dos LEDs para acenderem e aparem em sequência.
    digitalWrite (fxLeds [pino], HIGH);//-----Acende os LEDs em sequência.
    digitalWrite (fxLeds [pino-1], LOW);//----Apaga os LEDs em sequÊncia.
    delay (70);//-----------------------------Tempo em ms que os leds acendem e apagam.   
    }
    for (int pino=0; pino<=10; pino ++) {//---Verificando os 10 pinos dos LEDs para acenderem e aparem em sequência.
    digitalWrite (fxLeds [pino], HIGH);//-----Acende os LEDs em sequência.
    digitalWrite (fxLeds [pino-1], LOW);//----Apaga os LEDs em sequÊncia.
    delay (70);//-----------------------------Tempo em ms que os leds acendem e apagam.   
    }
    for (int pino=0; pino<=10; pino ++) {//---Verificando os 10 pinos dos LEDs para acenderem e aparem em sequência.
    digitalWrite (fxLeds [pino], HIGH);//-----Acende os LEDs em sequência.
    digitalWrite (fxLeds [pino-1], LOW);//----Apaga os LEDs em sequÊncia.
    delay (70);//-----------------------------Tempo em ms que os leds acendem e apagam.    
    }
    //########### FIM DO BLOCO ANIMAÇÃO DOS LEDS ###########
    
    programChange(channel, 0);;//-----Inicia o primeiro Patch.
    digitalWrite(A0, HIGH);//---------Inicia o primeiro LED aceso.
}
 
void loop() {
 
    if(digitalRead(2) == LOW ) {//----Se o botão no pino 2 for pressioanado.
    programChange(channel, 0);//------Envie a mensagem PC para Patch1.
    digitalWrite(A0, HIGH);//---------Acende o LED do Botão1.
    digitalWrite(A1, LOW);digitalWrite(A2, LOW);digitalWrite(A3, LOW);digitalWrite(A4, LOW);//--Apaga os lEDs dos outros Botões.
    digitalWrite(A5, LOW);digitalWrite(12, LOW);digitalWrite(13, LOW);digitalWrite(1, LOW);digitalWrite(0, LOW);//--Apaga os lEDs dos efeitos.
    delay(400);//---------------------Tempo em ms até o botão enviar o mesmo comando novamente.
    }

    if(digitalRead(3) == LOW ) {//----Se o botão no pino 3 for pressioanado.
    programChange(channel, 1);//------Envie a mensagem PC para Patch2.
    digitalWrite(A1, HIGH);//---------Acende o LED do Botão2.
    digitalWrite(A0, LOW);digitalWrite(A2, LOW);digitalWrite(A3, LOW);digitalWrite(A4, LOW);//--Apaga os lEDs dos outros Botões.
    digitalWrite(A5, LOW);digitalWrite(12, LOW);digitalWrite(13, LOW);digitalWrite(1, LOW);digitalWrite(0, LOW);//--Apaga os lEDs dos efeitos.
    delay(400);//---------------------Tempo em ms até o botão enviar o mesmo comando novamente.
    }

    if(digitalRead(4) == LOW ) {//----Se o botão no pino 4 for pressioanado.
    programChange(channel, 2);//------Envie a mensagem PC para Patch3.
    digitalWrite(A2, HIGH);//---------Acende o LED do Botão3.
    digitalWrite(A0, LOW);digitalWrite(A1, LOW);digitalWrite(A3, LOW);digitalWrite(A4, LOW);//--Apaga os lEDs dos outros Botões.
    digitalWrite(A5, LOW);digitalWrite(12, LOW);digitalWrite(13, LOW);digitalWrite(1, LOW);digitalWrite(0, LOW);//--Apaga os lEDs dos efeitos.
    delay(400);//---------------------Tempo em ms até o botão enviar o mesmo comando novamente.
    }

    if(digitalRead(5) == LOW ) {//----Se o botão no pino 5 for pressioanado.
    programChange(channel, 3);//------Envie a mensagem PC para Patch4.
    digitalWrite(A3, HIGH);//---------Acende o LED do Botão4.
    digitalWrite(A0, LOW);digitalWrite(A2, LOW);digitalWrite(A1, LOW);digitalWrite(A4, LOW);//--Apaga os lEDs dos outros Botões.
    digitalWrite(A5, LOW);digitalWrite(12, LOW);digitalWrite(13, LOW);digitalWrite(1, LOW);digitalWrite(0, LOW);//--Apaga os lEDs dos efeitos.
    delay(400);//---------------------Tempo em ms até o botão enviar o mesmo comando novamente.
    }

    if(digitalRead(6) == LOW ) {//----Se o botão no pino 6 for pressioanado.
    programChange(channel, 4);//------Envie a mensagem PC para Patch5.
    digitalWrite(A4, HIGH);//---------Acende o LED do Botão5.
    digitalWrite(A0, LOW);digitalWrite(A2, LOW);digitalWrite(A3, LOW);digitalWrite(A1, LOW);//--Apaga os lEDs dos outros Botões.
    digitalWrite(A5, LOW);digitalWrite(12, LOW);digitalWrite(13, LOW);digitalWrite(1, LOW);digitalWrite(0, LOW);//--Apaga os lEDs dos efeitos.
    delay(400);//---------------------Tempo em ms até o botão enviar o mesmo comando novamente.
    }
    //########### FIM DO BLOCO DOS BOTÕES DE COMANDOS PC ###########


    //########### BOTÕES QUE ENVIAM COMANDOS CC PARA LIGAR E DESLIGAR EFEITOS ###########
    
    if(digitalRead(7) == LOW ) {//-------------Se o botão no pino 7 for pressioanado.
    digitalWrite(A5, !digitalRead (A5));//-----Ligue e leia o pino A5.
    if (digitalRead (A5) == HIGH){//-----------Se o estado do LED no pino A5 for aceso.
    controlChange(0xB0, 0x40, 0x00);//---------Envie o comando MIDI CC#64 On.
    }else{controlChange(0xB0, 0x40, 0x7F);//---Se o estado do LED no pino A5 for apagado, envie o comando MIDI CC#64 Off.
    }
    delay(400);//------------------------------Tempo em ms até o botão enviar o mesmo comando novamente.
    }
 
    if(digitalRead(8) == LOW ) {//-------------Se o botão no pino 8 for pressioanado.
    digitalWrite(12, !digitalRead (12));//-----Ligue e leia o pino 12.
    if (digitalRead (12) == HIGH){//-----------Se o estado do LED no pino 12 for aceso.
    controlChange(0xB0, 0x50, 0x00);//---------Envie o comando MIDI CC#80 On.
    }else{controlChange(0xB0, 0x50, 0x7F);//---Se o estado do LED no pino 12 for apagado, envie o comando MIDI CC#80 Off.
    }
    delay(400);//------------------------------Tempo em ms até o botão enviar o mesmo comando novamente.
    }

    if(digitalRead(9) == LOW ) {//-------------Se o botão no pino 9 for pressioanado.
    digitalWrite(13, !digitalRead (13));//-----Ligue e leia o pino 13.
    if (digitalRead (13) == HIGH){//-----------Se o estado do LED no pino 13 for aceso.
    controlChange(0xB0, 0x42, 0x00);//---------Envie o comando MIDI CC#66 On.
    }else{controlChange(0xB0, 0x42, 0x7F);//---Se o estado do LED no pino 13 for apagado, envie o comando MIDI CC#66 Off.
    }
    delay(400);//------------------------------Tempo em ms até o botão enviar o mesmo comando novamente.
    }

    if(digitalRead(10) == LOW ) {//------------Se o botão no pino 10 for pressioanado.
    digitalWrite(1, !digitalRead (1));//-------Ligue e leia o pino 1.
    if (digitalRead (1) == HIGH){//------------Se o estado do LED no pino 1 for aceso.
    controlChange(0xB0, 0x52, 0x00);//---------Envie o comando MIDI CC#82 On.
    }else{controlChange(0xB0, 0x52, 0x7F);//---Se o estado do LED no pino 1 for apagado, envie o comando MIDI CC#82 Off.
    }
    delay(400);//------------------------------Tempo em ms até o botão enviar o mesmo comando novamente.
    }

    if(digitalRead(11) == LOW ) {//------------Se o botão no pino 11 for pressioanado.
    digitalWrite(0, !digitalRead (0));//-------Ligue e leia o pino 0.
    if (digitalRead (0) == HIGH){//------------Se o estado do LED no pino 0 for aceso.
    controlChange(0xB0, 0x10, 0x00);//---------Envie o comando MIDI CC#16 On.
    }else{controlChange(0xB0, 0x10, 0x7F);//---Se o estado do LED no pino 0 for apagado, envie o comando MIDI CC#16 Off.
    }
    delay(400);//------------------------------Tempo em ms até o botão enviar o mesmo comando novamente.
    }

    //########### FIM DO BLOCO DOS BOTÕES DE COMANDOS CC ###########
   
    MidiUSB.flush();  // Enviar mensagem imediatamente.
}

void programChange(byte channel, byte patch) {//---------------Ativando envio dos comandos PC.
  midiEventPacket_t event = {0x0C, 0xC0  | channel, patch};//--Onde iniciará o envio dos comandos PC.
  MidiUSB.sendMIDI(event);//-----------------------------------Enviando comandos PC.
}

void controlChange(byte channel, byte control, byte value) {//------------Código de controle dos comandos CC.
  midiEventPacket_t eventcc = {0x0B, 0xB0  | channel, control, value};//--Onde iniciará o envio dos comandos CC.
  MidiUSB.sendMIDI(eventcc);//--------------------------------------------Enviando comandos CC.
}
